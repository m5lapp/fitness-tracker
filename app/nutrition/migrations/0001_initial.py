# Generated by Django 4.2.5 on 2023-11-05 00:06

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=256)),
                ('subcategory', models.CharField(blank=True, max_length=256, null=True)),
                ('brand', models.CharField(blank=True, max_length=256, null=True)),
                ('range', models.CharField(blank=True, max_length=256, null=True)),
                ('notes', models.CharField(blank=True, max_length=4096, null=True)),
                ('favourite', models.BooleanField(default=False)),
                ('amount', models.FloatField(default=100.0, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10000.0)])),
                ('unit', models.CharField(choices=[('g', 'grams'), ('units', 'items/pieces'), ('ml', 'millilitres')], default='g', max_length=10)),
                ('energy', models.FloatField(blank=True, help_text='Calories (kcal) of energy per given amount', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10000.0)])),
                ('fat', models.FloatField(blank=True, help_text='Grams of total fats per given amount', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10000.0)])),
                ('saturates', models.FloatField(blank=True, help_text='Grams of saturated fat per given amount', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10000.0)])),
                ('carbohydrates', models.FloatField(blank=True, help_text='Grams of carbohydrates per given amount', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10000.0)])),
                ('sugars', models.FloatField(blank=True, help_text='Grams of carbohydrates of which sugars per given amount', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10000.0)])),
                ('protein', models.FloatField(blank=True, help_text='Grams of protein per given amount', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10000.0)])),
                ('salt', models.FloatField(blank=True, help_text='Grams of salt per given amount', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10000.0)])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='nutrition.foodcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('type', models.CharField(choices=[('Breakfast', 'ü•£ Breakfast'), ('Brunch', 'üç≥ Brunch'), ('Desert', 'üç∞ Desert'), ('Dinner', 'üç≤ Dinner'), ('Drink', 'ü•õ Drink'), ('Ingredient', 'ü•ö Ingredient'), ('Lunch', 'ü•™ Lunch'), ('Snack', 'ü•® Snack'), ('Supplement', 'ü•´ Supplement'), ('Treat', 'üç™ Treat')], default='Dinner', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='TargetIntake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=256, unique=True)),
                ('description', models.CharField(blank=True, max_length=4096, null=True)),
                ('energy', models.FloatField(default=2000.0, help_text='Daily target intake of energy in kcal', validators=[django.core.validators.MinValueValidator(1000.0), django.core.validators.MaxValueValidator(10000.0)])),
                ('fat', models.FloatField(default=70.0, help_text='Daily target intake of fat in grams', validators=[django.core.validators.MinValueValidator(35.0), django.core.validators.MaxValueValidator(350.0)])),
                ('saturates', models.FloatField(default=20.0, help_text='Daily target intake of saturated fat in grams', validators=[django.core.validators.MinValueValidator(10.0), django.core.validators.MaxValueValidator(100.0)])),
                ('carbohydrates', models.FloatField(default=260.0, help_text='Daily target intake of carbohydrates in grams', validators=[django.core.validators.MinValueValidator(130.0), django.core.validators.MaxValueValidator(1300.0)])),
                ('sugars', models.FloatField(default=90.0, help_text='Daily target intake of sugars in grams', validators=[django.core.validators.MinValueValidator(45.0), django.core.validators.MaxValueValidator(450.0)])),
                ('protein', models.FloatField(default=50.0, help_text='Daily target intake of protein in grams', validators=[django.core.validators.MinValueValidator(25.0), django.core.validators.MaxValueValidator(250.0)])),
                ('salt', models.FloatField(default=6.0, help_text='Daily maximum intake of salt in grams', validators=[django.core.validators.MinValueValidator(3.0), django.core.validators.MaxValueValidator(30.0)])),
            ],
        ),
        migrations.CreateModel(
            name='MealItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('amount', models.FloatField(default=1.0, help_text='Quantity of the item consumed', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10000.0)])),
                ('food_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='nutrition.fooditem')),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='nutrition.meal')),
            ],
        ),
    ]
